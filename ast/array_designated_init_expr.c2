/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer;
import utils local;

public type ArrayDesignatedInitExpr struct {
    Expr parent;
    Expr* designator;
    Expr* initValue;
    // TODO value during analysis
} @(opaque)

public func ArrayDesignatedInitExpr* ArrayDesignatedInitExpr.create(ast_context.Context* c,
                                                                    SrcLoc loc,
                                                                    Expr* designator,
                                                                    Expr* initValue) @(inline)
{
    ArrayDesignatedInitExpr* e = c.alloc(sizeof(ArrayDesignatedInitExpr));
    e.parent.init(ExprKind.ArrayDesignatedInit, loc, 0, 0, 0);
    e.designator = designator;
    e.initValue = initValue;
#if AstStatistics
    Stats.addExpr(ExprKind.ArrayDesignatedInit, sizeof(ArrayDesignatedInitExpr));
#endif
    return e;
}

public func Expr* ArrayDesignatedInitExpr.getDesignator(const ArrayDesignatedInitExpr* e) {
    return e.designator;
}

public func Expr** ArrayDesignatedInitExpr.getDesignator2(ArrayDesignatedInitExpr* e) {
    return &e.designator;
}

public func Expr* ArrayDesignatedInitExpr.getInit(const ArrayDesignatedInitExpr* e) {
    return e.initValue;
}

public func Expr** ArrayDesignatedInitExpr.getInit2(ArrayDesignatedInitExpr* e) {
    return &e.initValue;
}

func void ArrayDesignatedInitExpr.print(const ArrayDesignatedInitExpr* e, string_buffer.Buf* out, u32 indent) {
    e.parent.printKind(out, indent);
    e.parent.printTypeBits(out);
    out.add("\n");
    e.designator.print(out, indent + 2);
    e.initValue.print(out, indent + 2);
}


/* Copyright 2022-2023 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module ast;

import ast_context;
import string_buffer;
import src_loc local;

public type ArrayValue struct {
    u32 name_idx;   // 0 means nil
    SrcLoc loc;
    Expr* value;
} @(opaque)

public fn ArrayValue* ArrayValue.create(ast_context.Context* c,
                                          u32 name,
                                          SrcLoc loc,
                                          Expr* value)
{
    ArrayValue* d = c.alloc(sizeof(ArrayValue));
    d.name_idx = name;
    d.loc = loc;
    d.value = value;
#if AstStatistics
    Stats.addArrayValue(sizeof(ArrayValue));
#endif
    return d;
}

public fn u32 ArrayValue.getNameIdx(const ArrayValue* d) {
    return d.name_idx;
}

public fn SrcLoc ArrayValue.getLoc(const ArrayValue* d) {
    return d.loc;
}

public fn Expr* ArrayValue.getValue(const ArrayValue* d) {
    return d.value;
}

fn void ArrayValue.print(const ArrayValue* d, string_buffer.Buf* out) {
/*
    d.parent.printKind(out, 0, false);
    out.color(col_Value);
    d.parent.printName(out);
    out.newline();
    d.value.print(out, 1);
*/
}


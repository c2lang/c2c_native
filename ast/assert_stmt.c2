/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer;

public type AssertStmt struct {
    Stmt parent;
    Expr* inner;
} @(opaque)

public func AssertStmt* AssertStmt.create(ast_context.Context* c,
                                          Expr* inner) @(inline)
{
    AssertStmt* s = c.alloc(sizeof(AssertStmt));
    s.parent.init(StmtKind.Assert);
    s.inner = inner;
#if AstStatistics
    Stats.addStmt(StmtKind.Assert, sizeof(AssertStmt));
#endif
    return s;
}

func Stmt* AssertStmt.instantiate(AssertStmt* s, Instantiator* inst) {
    AssertStmt* s2 = AssertStmt.create(inst.c, s.inner.instantiate(inst));
    return cast<Stmt*>(s2);
}

func void AssertStmt.print(const AssertStmt* s, string_buffer.Buf* out, u32 indent) {
    s.parent.printKind(out, indent);
    out.add1('\n');
    s.inner.print(out, indent + 1);
}

public func Expr* AssertStmt.getInner(const AssertStmt* s) { return s.inner; }

public func Expr** AssertStmt.getInner2(AssertStmt* s) { return &s.inner; }


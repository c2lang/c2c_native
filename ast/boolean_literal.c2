/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer;
import utils local;

public type BooleanLiteralBits struct {
    u32 : NumExprBits;
    u32 value : 1;
}

public type BooleanLiteral struct {
    Expr parent;
} @(opaque)

public func BooleanLiteral* BooleanLiteral.create(ast_context.Context* c, SrcLoc loc, bool val) @(inline) {
    BooleanLiteral* e = c.alloc(sizeof(BooleanLiteral));
    e.parent.init(ExprKind.BooleanLiteral, loc, 1, 1, 0);
    e.parent.parent.booleanLiteralBits.value = val;
    return e;
}

public func void BooleanLiteral.print(const BooleanLiteral* e, string_buffer.Buf* out, u32 indent) {
    out.indent(indent);
    out.print("BooleanLiteral %d\n", e.parent.parent.booleanLiteralBits.value);
}

func void BooleanLiteral.printLiteral(const BooleanLiteral* e, string_buffer.Buf* out) {
    out.add(e.parent.parent.booleanLiteralBits.value ? "true" : "false");
}


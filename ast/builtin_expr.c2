/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context local;
import utils local;

public type BuiltinExprBits struct {
    u32 : NumExprBits;
    u32 kind : 3;
}

public type BuiltinExpr struct {
    Expr expr;
} @(opaque)

public type BuiltinExprKind enum u8 {
    Sizeof,
    Elemsof,
}

public func BuiltinExpr* BuiltinExpr.create(Context* c, SrcLoc loc) @(inline) {
    BuiltinExpr* b = c.alloc(sizeof(BuiltinExpr));
    Stmt* s = &b.expr.stmt;
    b.expr.init(ExprKind.Builtin, loc, 1, 1, 0);
    s.builtinExprBits.kind = BuiltinExprKind.Elemsof;
    return b;
}

public func BuiltinExprKind BuiltinExpr.getKind(const BuiltinExpr* b) {
    return cast<BuiltinExprKind>(b.expr.stmt.builtinExprBits.kind);
}

public func void BuiltinExpr.print(const BuiltinExpr* b, StringBuffer* out, u32 indent) {
    out.indent(indent);
    out.add("BuiltinExpr ");
    switch (b.getKind()) {
    case BuiltinExprKind.Sizeof:
        out.add("sizeof");
        break;
    case BuiltinExprKind.Elemsof:
        out.add("elemsof");
        break;
    }
    out.add("\n");
}


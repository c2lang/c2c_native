/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context local;
import utils local;

public type BuiltinExprBits struct {
    u32 : NumExprBits;
    u32 kind : 3;
}

public type BuiltinExpr struct {
    Expr expr;
    Expr* inner;
} @(opaque)

public type BuiltinExprKind enum u8 {
    Sizeof,
    Elemsof,
}

// Keep in sync
const char*[] builtin_names = {
    "sizeof",
    "elemsof",
}

static_assert(elemsof(BuiltinExprKind), elemsof(builtin_names));

public func BuiltinExpr* BuiltinExpr.create(Context* c, SrcLoc loc, Expr* inner, BuiltinExprKind kind) @(inline) {
    BuiltinExpr* e = c.alloc(sizeof(BuiltinExpr));
    e.expr.init(ExprKind.Builtin, loc, 1, 1, 0);
    e.expr.stmt.builtinExprBits.kind = kind;
    e.inner = inner;
    return e;
}

public func BuiltinExprKind BuiltinExpr.getKind(const BuiltinExpr* e) {
    return cast<BuiltinExprKind>(e.expr.stmt.builtinExprBits.kind);
}

public func void BuiltinExpr.print(const BuiltinExpr* e, StringBuffer* out, u32 indent) {
    out.indent(indent);
    out.print("BuiltinExpr %s\n", builtin_names[e.getKind()]);
}


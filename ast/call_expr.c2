/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import utils local;

public type CallExprBits struct {
    u32 : NumExprBits;
    u32 ref_type : 1;
}

public type CallExpr struct {
    Expr expr;
    Expr* fn;
} @(opaque)

// TODO args
public func CallExpr* CallExpr.create(ast_context.Context* c, SrcLoc loc, Expr* fn) @(inline) {
    // assert(fn);
    CallExpr* e = c.alloc(sizeof(CallExpr));
    e.expr.init(ExprKind.Call, loc, 0, 0, 0);
    e.fn = fn;
    return e;
}

public func void CallExpr.print(const CallExpr* e, StringBuffer* out, u32 indent) {
    out.indent(indent);
    out.add("CallExpr\n");
    e.fn.print(out, indent + 1);
}


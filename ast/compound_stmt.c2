/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context local;
import utils local;

// TEMP
import stdio local;

type CompoundStmtBits struct {
    u32 : NumStmtBits;
    u32 has_value : 1;
}

public type CompoundStmt struct {
    Stmt stmt;
    Expr*[0] value; // tail-allocated, dependent on returnStmtBits.has_value
} @(opaque)

public func CompoundStmt* CompoundStmt.create(Context* c) @(inline) {
    u32 size = sizeof(CompoundStmt);
    //if (value) size += sizeof(Expr*);

    CompoundStmt* s = c.alloc(size);
    s.stmt.init(StmtKind.Compound);

    return s;
}

public func void CompoundStmt.print(const CompoundStmt* s) {
    printf("CompoundStmt\n");
    // TODO
}



/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer;
import src_loc local;

public type FieldDesignatedInitExpr struct {
    Expr parent;
    u32 field;
    Expr* initValue;
} @(opaque)

public func FieldDesignatedInitExpr* FieldDesignatedInitExpr.create(ast_context.Context* c,
                                                                    u32 field,
                                                                    SrcLoc loc,
                                                                    Expr* initValue) @(inline)
{
    FieldDesignatedInitExpr* e = c.alloc(sizeof(FieldDesignatedInitExpr));
    e.parent.init(ExprKind.FieldDesignatedInit, loc, 0, 0, 0, ValType.RValue);
    e.field = field;
    e.initValue = initValue;
#if AstStatistics
    Stats.addExpr(ExprKind.FieldDesignatedInit, sizeof(FieldDesignatedInitExpr));
#endif
    return e;
}

public func u32 FieldDesignatedInitExpr.getField(const FieldDesignatedInitExpr* e) {
    return e.field;
}

public func const char* FieldDesignatedInitExpr.getFieldName(const FieldDesignatedInitExpr* e) {
    return idx2name(e.field);
}

public func Expr* FieldDesignatedInitExpr.getInit(FieldDesignatedInitExpr* e) {
    return e.initValue;
}

public func Expr** FieldDesignatedInitExpr.getInit2(FieldDesignatedInitExpr* e) {
    return &e.initValue;
}

func void FieldDesignatedInitExpr.print(const FieldDesignatedInitExpr* e, string_buffer.Buf* out, u32 indent) {
    e.parent.printKind(out, indent);
    e.parent.printTypeBits(out);
    out.color(col_Value);
    out.print(" %s\n", idx2name(e.field));
    e.initValue.print(out, indent + 2);
}


/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import utils local;

type ForStmtBits struct {
    u32 : NumStmtBits;
    u32 has_else : 1;
}

public type ForStmt struct {
    Stmt stmt;
    Stmt* init;
    Stmt* cond;
    Expr* incr;
    Stmt* body;
} @(opaque)

public func ForStmt* ForStmt.create(ast_context.Context* c, Stmt* init_, Stmt* cond, Expr* incr, Stmt* body) @(inline) {
    ForStmt* s = c.alloc(sizeof(ForStmt));
    s.stmt.init(StmtKind.For);
    s.init = init_;
    s.cond = cond;
    s.incr = incr;
    s.body = body;
    return s;
}

public func void ForStmt.print(const ForStmt* s, StringBuffer* out, u32 indent) {
    out.indent(indent);
    out.add("ForStmt\n");
    if (s.init) s.init.print(out, indent + 2);
    if (s.cond) s.cond.print(out, indent + 2);
    if (s.incr) s.incr.print(out, indent + 2);
    if (s.body) s.body.print(out, indent + 2);
}

public func Stmt* ForStmt.getInit(const ForStmt* s) @(inline) { return s.init; }
public func Stmt* ForStmt.getCond(const ForStmt* s) @(inline) { return s.cond; }
public func Expr* ForStmt.getIncr(const ForStmt* s) @(inline) { return s.incr; }
public func Stmt* ForStmt.getBody(const ForStmt* s) @(inline) { return s.body; }

public func Stmt** ForStmt.getInit2(ForStmt* s) @(inline) { return s.init ? &s.init : nil; }
public func Stmt** ForStmt.getCond2(ForStmt* s) @(inline) { return s.cond ? &s.cond : nil; }
public func Expr** ForStmt.getIncr2(ForStmt* s) @(inline) { return s.incr ? &s.incr : nil; }
public func Stmt** ForStmt.getBody2(ForStmt* s) @(inline) { return s.body ? &s.body : nil; }


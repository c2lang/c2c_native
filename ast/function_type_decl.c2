/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer;
import utils;

public type FunctionTypeDecl struct {
    Decl parent;
    FunctionDecl* fn;
} @(opaque)

public func FunctionTypeDecl* FunctionTypeDecl.create(ast_context.Context* c, bool is_public, FunctionDecl* fn) @(inline) {
    FunctionTypeDecl* d = c.alloc(sizeof(FunctionTypeDecl));
    Decl* dfn = fn.asDecl();
    d.parent.init(DeclKind.FunctionType, dfn.getName(), dfn.getLoc(), is_public);
    d.fn = fn;
    return d;
}

public func Decl* FunctionTypeDecl.asDecl(FunctionTypeDecl* t) @(inline) { return &t.parent; }

public func void FunctionTypeDecl.print(const FunctionTypeDecl* d, string_buffer.Buf* out, u32 indent) {
    d.parent.printKind(out, indent, "FunctionTypeDecl");
    d.parent.printBits(out);
    d.parent.printName(out);

    d.fn.print(out, indent + 2 );
}


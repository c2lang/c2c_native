/* Copyright 2022-2024 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module ast;

import ast_context;
import string_buffer;
import src_loc local;

public type GotoStmt struct @(opaque) {
    Stmt parent;
    SrcLoc loc;
    u32 name;
}

public fn GotoStmt* GotoStmt.create(ast_context.Context* c, u32 name, SrcLoc loc) {
    GotoStmt* s = c.alloc(sizeof(GotoStmt));
    s.parent.init(StmtKind.Goto);
    s.loc = loc;
    s.name = name;
#if AstStatistics
    Stats.addStmt(StmtKind.Goto, sizeof(GotoStmt));
#endif
    return s;
}

public fn const char* GotoStmt.getName(const GotoStmt* g) {
    return idx2name(g.name);
}

public fn u32 GotoStmt.getNameIdx(const GotoStmt* g) {
    return g.name;
}

public fn SrcLoc GotoStmt.getLoc(const GotoStmt* g) {
    return g.loc;
}

fn void GotoStmt.print(const GotoStmt* s, string_buffer.Buf* out, u32 indent) {
    s.parent.printKind(out, indent);
    out.color(col_Value);
    out.print(" %s\n", idx2name(s.name));
}


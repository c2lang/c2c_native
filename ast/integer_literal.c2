/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer local;
import utils local;

public type IntegerLiteralBits struct {
    u32 : NumExprBits;
    //u32 radix : 4;
    //u32 signed : 1;
}

public type IntegerLiteral struct {
    Expr expr;
    u64 val;
} @(opaque)

public func IntegerLiteral* IntegerLiteral.create(ast_context.Context* c, SrcLoc loc, u64 val) @(inline) {
    IntegerLiteral* i = c.alloc(sizeof(IntegerLiteral));
    i.expr.init(ExprKind.IntegerLiteral, loc, 1, 1, 0);
    i.val = val;
    return i;
}

public func void IntegerLiteral.print(const IntegerLiteral* i, StringBuffer* out, u32 indent) {
    out.indent(indent);
    out.print("IntegerLiteral %lu\n", i.val);
}


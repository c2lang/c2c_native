/* Copyright 2022-2023 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module ast;

import ast_context;
import string_buffer;
import src_loc local;

public type LabelStmt struct @(opaque) {
    Stmt parent;
    SrcLoc loc;
    u32 name;
}

public fn LabelStmt* LabelStmt.create(ast_context.Context* c, u32 name, SrcLoc loc) {
    LabelStmt* s = c.alloc(sizeof(LabelStmt));
    s.parent.init(StmtKind.Label);
    s.loc = loc;
    s.name = name;
#if AstStatistics
    Stats.addStmt(StmtKind.Label, sizeof(LabelStmt));
#endif
    return s;
}

public fn const char* LabelStmt.getName(const LabelStmt* s) {
    return idx2name(s.name);
}

public fn u32 LabelStmt.getNameIdx(const LabelStmt* s) {
    return s.name;
}

public fn SrcLoc LabelStmt.getLoc(const LabelStmt* s) {
    return s.loc;
}

fn void LabelStmt.print(const LabelStmt* s, string_buffer.Buf* out, u32 indent) {
    s.parent.printKind(out, indent);
    out.color(col_Value);
    out.print(" %s\n", idx2name(s.name));
}


/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer;
import utils;

public type PointerType struct {
    Type parent;
    QualType inner;
} @(opaque)

public func PointerType* PointerType.create(ast_context.Context* c, QualType inner) @(inline) {
    PointerType* t = c.alloc(sizeof(PointerType));
    t.parent.init(TypeKind.Pointer);
    t.inner = inner;
    return t;
}

public func Type* PointerType.asType(PointerType* t) @(inline) { return &t.parent; }

public func QualType PointerType.getInner(const PointerType* t) { return t.inner; }

func void PointerType.print(const PointerType* t, string_buffer.Buf* out) {
    t.inner.print(out);
    out.add("*");
}

func void PointerType.debugPrint(const PointerType* t, string_buffer.Buf* out) {
    t.inner.debugPrint(out);
    out.add("*");
}

public func void PointerType.fullPrint(const PointerType* t, string_buffer.Buf* out, u32 indent) {
    out.indent(indent);
    out.add("PointerType\n");
    t.inner.fullPrint(out, indent + 2);
}

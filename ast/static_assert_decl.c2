/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer;
import src_loc local;

public type StaticAssertDecl struct {
    Decl parent;
    Expr* lhs;
    Expr* rhs;
} @(opaque)

public func StaticAssertDecl* StaticAssertDecl.create(ast_context.Context* c,
                                                      u32 ast_idx,
                                                      SrcLoc loc,
                                                      Expr* lhs,
                                                      Expr* rhs) @(inline)
{
    StaticAssertDecl* d = c.alloc(sizeof(StaticAssertDecl));
    d.parent.init(DeclKind.StaticAssert, 0, loc, false, QualType_Invalid, ast_idx);
    d.lhs = lhs;
    d.rhs = rhs;
#if AstStatistics
    Stats.addDecl(DeclKind.StaticAssert, sizeof(StaticAssertDecl));
#endif
    return d;
}

public func Decl* StaticAssertDecl.asDecl(StaticAssertDecl* d) @(inline) {
    return &d.parent;
}

public func Expr* StaticAssertDecl.getLhs(const StaticAssertDecl* d) {
    return d.lhs;
}

public func Expr* StaticAssertDecl.getRhs(const StaticAssertDecl* d) {
    return d.rhs;
}


func void StaticAssertDecl.print(const StaticAssertDecl* d, string_buffer.Buf* out, u32 indent) {
    out.indent(indent);
    out.print("StaticAssert\n");
    d.lhs.print(out, indent + 1);
    d.rhs.print(out, indent + 1);
}


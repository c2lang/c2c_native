/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context;
import string_buffer;
import utils local;

public type TypeExpr struct {
    Expr parent;
    QualType qt;
} @(opaque)

public func TypeExpr* TypeExpr.create(ast_context.Context* c, SrcLoc loc, QualType qt) @(inline) {
    TypeExpr* e = c.alloc(sizeof(TypeExpr));
    e.parent.init(ExprKind.Type, loc, 0, 0, 0);
    e.qt = qt;
    return e;
}

func void TypeExpr.print(const TypeExpr* e, string_buffer.Buf* out, u32 indent) {
    e.parent.printKind(out, indent, "TypeExpr");
    e.parent.printTypeBits(out);
    out.add("\n");

    e.qt.print(out);
}


/* Copyright 2022 Bas van den Berg
*/

module ast;

import ast_context local;

// TODO fix values (sizeof bitfields)
/*
static_assert(24, sizeof(Decl));
static_assert(40, sizeof(FunctionDecl));
//static_assert(40, sizeof(TypeDecl));
static_assert(32, sizeof(StructTypeDecl));
static_assert(40, sizeof(ImportDecl));
*/

static_assert(20, sizeof(Stmt));
static_assert(24, sizeof(CompoundStmt));
static_assert(40, sizeof(DoStmt));
static_assert(56, sizeof(ForStmt));
static_assert(40, sizeof(IfStmt));
static_assert(24, sizeof(ReturnStmt));
static_assert(40, sizeof(WhileStmt));

static_assert(24, sizeof(Expr));
static_assert(24, sizeof(BuiltinExpr));
static_assert(24, sizeof(BooleanLiteral));
static_assert(24, sizeof(CharLiteral));
static_assert(32, sizeof(StringLiteral));
static_assert(24, sizeof(NilExpr));
static_assert(32, sizeof(IdentifierExpr));
static_assert(32, sizeof(CallExpr));
static_assert(32, sizeof(IntegerLiteral));

static_assert(8, sizeof(Type));
static_assert(8, sizeof(BuiltinType));
static_assert(16, sizeof(RefType));

static_assert(8, sizeof(QualType));

public BuiltinType* g_u8;
public BuiltinType* g_u16;
public BuiltinType* g_u32;
public BuiltinType* g_u64;
public BuiltinType* g_i8;
public BuiltinType* g_i16;
public BuiltinType* g_i32;
public BuiltinType* g_i64;
public BuiltinType* g_void;
public BuiltinType* g_bool;

public func void init(Context* c) {
    g_u8 = BuiltinType.create(c, BuiltinTypeKind.UInt8);
    g_u16 = BuiltinType.create(c, BuiltinTypeKind.UInt16);
    g_u32 = BuiltinType.create(c, BuiltinTypeKind.UInt32);
    g_u64 = BuiltinType.create(c, BuiltinTypeKind.UInt64);
    g_i8 = BuiltinType.create(c, BuiltinTypeKind.Int8);
    g_i16 = BuiltinType.create(c, BuiltinTypeKind.Int16);
    g_i32 = BuiltinType.create(c, BuiltinTypeKind.Int32);
    g_i64 = BuiltinType.create(c, BuiltinTypeKind.Int64);
    g_void = BuiltinType.create(c, BuiltinTypeKind.Void);
    g_bool = BuiltinType.create(c, BuiltinTypeKind.Bool);
}


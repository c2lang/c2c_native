/* Copyright 2022 Bas van den Berg
*/

module string_list;

import string_pool;
import string local;

public const u32 MaxEntries = 16; // TEMP hardcoded

// For now just malloc everything into single buffer
public type List struct {
    const string_pool.Pool* pool;
    u32[MaxEntries] indexes;
    u32 count;
    // TODO auto-resize
}

public func void List.init(List* sl, const string_pool.Pool* pool) {
    memset(sl, 0, sizeof(List));
    sl.pool = pool;
}

/*
public func void List.clear(List* sl) {
    sl.count = 0;
    sl.buf_size = 0;
}
*/

public func void List.add(List* sl, u32 name_idx) {
    if (sl.count == MaxEntries) return; // TODO resize

    sl.indexes[sl.count] = name_idx;
    sl.count++;
}

public func bool List.contains(const List* sl, const char* name) {
    for (u32 i=0; i<sl.count; i++) {
        if (strcmp(sl.pool.idx2str(sl.indexes[i]), name) == 0) return true;
    }
    return false;
}


/* Copyright 2022-2023 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module library_loader;

import color;
import string_buffer;
import string_list;
import string_pool;

import stdio;
import stdlib;

public type Loader struct {
    string_pool.Pool* auxPool;  // no ownership
    string_list.List dirs;
} @(opaque)

public func Loader* create(string_pool.Pool* auxPool) {
    Loader* l = stdlib.calloc(1, sizeof(Loader));
    l.auxPool = auxPool;
    l.dirs.init(auxPool);

    return l;
}

public func void Loader.free(Loader* l) {
    l.dirs.free();
    stdlib.free(l);
}

public func void Loader.addDir(Loader* l, u32 dirname) {
    l.dirs.add(dirname);
}

public func void Loader.showAll(const Loader* l) {
    string_buffer.Buf* out = string_buffer.create(1024, color.useColor(), 2);
    out.add("libraries:\n");

    for (u32 i=0; i<l.dirs.length(); i++) {
        l.showLibs(out, l.dirs.get(i));
    }

    stdio.puts(out.data());
    out.free();
}

func void Loader.showLibs(const Loader* l, string_buffer.Buf* out, const char* dirname) {
    out.indent(1);
    out.color(color.Blue);
    out.add(dirname);
    out.color(color.Normal);
    out.newline();
}

/* Copyright 2022 Bas van den Berg
*/

module c2_parser;

import c2_ast_builder local;
import ast local;
import tokens local;
import utils local;

func Stmt* Parser.parseStmt(Parser* p) {
    // NOTE: keep in order
    switch (p.tok.kind) {
    case Kind.LBrace:
        return p.parseCompoundStmt();
    case Kind.KW_return:
        return p.parseReturnStmt();
    default:
        return nil; // TEMP
        break;
    }
    return nil;
}

func Stmt* Parser.parseCompoundStmt(Parser* p) {
    p.expectAndConsume(Kind.LBrace);

    // StmtList stmts;
    while (1) {
        if (p.tok.kind == Kind.RBrace) break;

        Stmt* s = p.parseStmt();
        // stmts.add(s);
    }

    p.expectAndConsume(Kind.RBrace);

    p.builder.actOnCompoundStmt(/* stmts */);

    return nil;
}

func Stmt* Parser.parseReturnStmt(Parser* p) {
    SrcLoc loc = p.tok.loc;
    p.consumeToken();

    Expr* ret = nil;
    if (p.tok.kind != Kind.Semicolon) {
    }
    return p.builder.actOnReturnStmt(loc, ret);
}


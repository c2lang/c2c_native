/* Copyright 2022 Bas van den Berg
*/

module tokens;

public type Kind enum u8 {
    None,
    Identifier,
    NumberLiteral,
    CharLiteral,
    StringLiteral,
    LParen,
    RParen,
    LSquare,
    RSquare,
    LBrace,
    RBrace,
    Exclaim,
    ExclaimEqual,
    Star,
    StarEqual,
    Amp,
    AmpAmp,
    AmpEqual,
    Pipe,
    PipePipe,
    PipeEqual,
    Equal,
    EqualEqual,
    Semicolon,
    Colon,
    At,
    Caret,
    CaretEqual,
    Question,
    Dot,
    Ellipsis,
    Comma,
    Plus,
    PlusPlus,
    PlusEqual,
    Minus,
    MinusMinus,
    MinusEqual,
    Tilde,
    Slash,
    SlashEqual,
    Percent,
    PercentEqual,
    Less,
    LessLess,
    LessEqual,
    LessLessEqual,
    Greater,
    GreaterGreater,
    GreaterEqual,
    GreaterGreaterEqual,
    KW_as,
    KW_asm,
    KW_auto,
    KW_bool,
    KW_break,
    KW_case,
    KW_cast,
    KW_char,
    KW_const,
    KW_continue,
    KW_default,
    KW_do,
    KW_elemsof,
    KW_else,
    KW_enum_max,
    KW_enum_min,
    KW_enum,
    KW_f32,
    KW_f64,
    KW_fallthrough,
    KW_false,
    KW_for,
    KW_func,
    KW_goto,
    KW_i8,
    KW_i16,
    KW_i32,
    KW_i64,
    KW_if,
    KW_import,
    KW_isize,
    KW_local,
    KW_module,
    KW_nil,
    KW_offsetof,
    KW_public,
    KW_reg8,
    KW_reg16,
    KW_reg32,
    KW_reg64,
    KW_return,
    KW_sizeof,
    KW_sswitch,
    KW_static_assert,
    KW_struct,
    KW_switch,
    KW_to_container,
    KW_true,
    KW_type,
    KW_u8,
    KW_u16,
    KW_u32,
    KW_u64,
    KW_union,
    KW_usize,
    KW_void,
    KW_volatile,
    KW_while,
    Eof,
    Warning,
    Error,
}

// NOTE: keep in sync with TokenKind
const char*[] token_names = {
    "none",
    "identifier",
    "number",
    "char",
    "string",
    "(",
    ")",
    "[",
    "]",
    "{",
    "}",
    "!",
    "!=",
    "*",
    "*=",
    "&",
    "&&",
    "&=",
    "|",
    "||",
    "|=",
    "=",
    "==",
    ";",
    ":",
    "@",
    "^",
    "^=",
    "?",
    ".",
    "...",
    ",",
    "+",
    "++",
    "+=",
    "-",
    "--",
    "-=",
    "~",
    "/",
    "/=",
    "%",
    "%=",
    "<",
    "<<",
    "<=",
    "<<=",
    ">",
    ">>",
    ">=",
    ">>=",
    "as",
    "asm",
    "auto",
    "bool",
    "break",
    "case",
    "cast",
    "char",
    "const",
    "continue",
    "default",
    "do",
    "elemsof",
    "else",
    "enum_max",
    "enum_min",
    "enum",
    "f32",
    "f64",
    "falltrhough",
    "false",
    "for",
    "func",
    "goto",
    "i8",
    "i16",
    "i32",
    "i64",
    "if",
    "import",
    "isize",
    "local",
    "module",
    "nil",
    "offsetof",
    "public",
    "reg8",
    "reg16",
    "reg32",
    "reg64",
    "return",
    "sizeof",
    "sswitch",
    "static_assert",
    "struct",
    "switch",
    "to_container",
    "true",
    "type",
    "u8",
    "u16",
    "u32",
    "u64",
    "union",
    "usize",
    "void",
    "volatile",
    "while",
    "eof",
    "warning",
    "error",
}

static_assert(elemsof(Kind), elemsof(token_names));

public func const char* kind2str(Kind kind) @(inline) {
    return token_names[kind];
}


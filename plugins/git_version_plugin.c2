/* Copyright 2022-2023 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module plugin_main;

import ast;
import console;
import constants;
import plugin_info;
import process_utils;

import stdlib local;
import string local;

public plugin_info.Plugin handle @(export) = {
    .load = load,
    .unload = unload,
    .init = init,
    .post = post_parse,
    .name = "Git Version 1.0",
}

type Plugin struct {
    plugin_info.Info* info;
    char[128] version;
}

func void* load(const char* options, bool show_timing, bool show_debug) {
    Plugin* p = calloc(1, sizeof(Plugin));
    console.init();
    console.setTiming(show_timing);
    console.setDebug(show_debug);
    // TODO handle options
    strcpy(p.version, "unknown");

    //TODO change comand, p.version is now the logfile ('unknown');
    // see c2c-cpp process_run()
    i32 retval = process_utils.run_args(".", "git", p.version, "describe --tags --always --dirty");
    if (retval == 0) {
        console.debug("git version '%s'", p.version);
    } else {
        console.warn("gitversion: no git archive?");
    }

    return p;
}

func void unload(void* arg) {
    free(arg);
}

func void init(void* arg, plugin_info.Info* info) {
    Plugin* p = arg;
    p.info = info;
    ast.setGlobals(info.ast_globals);
}

func void post_parse(void* arg) {
    Plugin* p = arg;
}


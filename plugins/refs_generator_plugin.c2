/* Copyright 2022-2023 Bas van den Berg
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

module plugin_main;

import ast;
import console;
import constants;
import refs_generator;
import plugin_info;
import utils;

import stdlib local;

type Plugin struct {
    plugin_info.Info* info;
}

public func void* load(const char* options, bool console_timing, bool console_debug) @(export) {
    Plugin* p = calloc(1, sizeof(Plugin));
    console.init();
    console.setTiming(console_timing);
    console.setDebug(console_debug);
    // TODO handle options
    return p;
}

public func void unload(void* arg) @(export) {
    free(arg);
}

public func void init(void* arg, plugin_info.Info* info) @(export) {
    Plugin* p = arg;
    p.info = info;
    ast.setGlobals(info.ast_globals);
}

public func void post_parse(void* arg) @(export) {
    Plugin* p = arg;
    console.debug("generating refs");
    u64 t1 = utils.now();
    refs_generator.generate(p.info.sm, p.info.output_dir, p.info.components, constants.refs_filename);
    u64 t2 = utils.now();
    console.log_time("refs generation", t2 - t1);
}


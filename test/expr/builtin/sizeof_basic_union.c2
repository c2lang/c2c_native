// @warnings{no-unused}
module test;
import stdio local;

type S1 union {
    i8 a;
}
static_assert(1, sizeof(S1));

type S2 union {
    i16 a;
    i8 b;
}
static_assert(2, sizeof(S2));

type S2_packed union {
    i16 a;
    i8 b;
} @(packed)
static_assert(2, sizeof(S2_packed));

type S3 union {
    i8 a;
    i8 b;
}
static_assert(1, sizeof(S3));

type S4 union {
    i8 a;
    i8 b;
    i8 c;
}
static_assert(1, sizeof(S4));

type S5 union {
    i32 a;
}
static_assert(4, sizeof(S5));

type S6 union {
    i32 a;
    i8 b;
}
static_assert(4, sizeof(S6));

type S6_packed union {
    i32 a;
    i8 b;
} @(packed)
static_assert(4, sizeof(S6_packed));

type S7 union {
    i8 a;
    i32 b;
    i8 c;
}
static_assert(4, sizeof(S7));

type S7_packed union {
    i8 a;
    i32 b;
    i8 c;
} @(packed)
static_assert(4, sizeof(S7_packed));

type S8 union {
    i32 a;
    i8 b;
    i8 c;
}
static_assert(4, sizeof(S8));

type S8_packed union {
    i32 a;
    i8 b;
} @(packed)
static_assert(4, sizeof(S8_packed));

type S9 union {
    i64 a;
}
static_assert(8, sizeof(S9));

type S10 union {
    u64 a;
    i8 b;
}
static_assert(8, sizeof(S10));

type S10_packed union {
    u64 a;
    i8 b;
} @(packed)
static_assert(8, sizeof(S10_packed));

type S11 union {
    i8 a;
    u64 b;
    i8 c;
}
static_assert(8, sizeof(S11));

type S11_packed union {
    i8 a;
    u64 b;
    i8 c;
} @(packed)
static_assert(8, sizeof(S11_packed));


module test;

type Callback fn void (i32 arg);

fn void test1(Callback c) {
    if (c == nil) {}
    if (nil == c) {}
    if (c) {}
    if (!c) {}
}

public fn void test2() @(weak) { }

fn void test3a()  {
    if (test1 == nil) {} // @error{comparison of function 'test.test1' will always be true}
}

fn void test3b()  {
    if (nil == test1) {} // @error{comparison of function 'test.test1' will always be true}
}

fn void test3c()  {
    if (test1) {} // @error{comparison of function 'test.test1' will always be true}
}

fn void test4()  {
    if (test2 == nil) {}
    if (nil == test2) {}
    if (test2) {}
    if (!test2) {}
}

public fn i32 main() {
    return 0;
}

// TODO test1 = nil
// test2 = nil
